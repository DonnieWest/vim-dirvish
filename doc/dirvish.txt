*dirvish.txt*	directory viewer

==============================================================================
INTRO                                                          *dirvish-intro*

Dirvish is a minimalist directory viewer. It basically dumps a list of paths
into a Vim buffer and provides some mappings to work with those paths. By
working with built-in Vim mechanisms instead of inventing peripheral
imitations, users (and other plugins) can compose and build upon known Vim
concepts.

Example: because each Dirvish buffer-name is a directory path, you can |:cd|
to the directory: >
  :cd %
<or create a new file: >
  :edit %/foo.txt
<or |expand()| the directory path: >
  :let &titlestring = expand('%', 1)
<
Example: because each dirvish buffer is just a list of absolute paths, you can
use normal Vim commands to |y|ank, |:read|, |gf|, etc. All of the built-in
CTRL-W mappings also work as expected.

==============================================================================
API                                                              *dirvish-api*

:Dirvish                                                            *:Dirvish*
    Open the |current-directory|.

:Dirvish {path}
    Open the directory at {path}, or its parent directory if {path} is a file.
    E.g. to open the directory of the current file: >
        :Dirvish %

dirvish#open()
b:dirvish
w:dirvish

==============================================================================
MAPPINGS                                                    *dirvish-mappings*

Dirvish defines these buffer-local mappings.

    g?              Show this help.
    R               Reload the current directory.
    q               Quit Dirvish and return to the original file.
    i
    <CR>            Open file.
    {Visual}i
    {Visual}<CR>    Open selected files.
    o               Open in horizontal split.
    {Visual}o       Open selected files in horizontal splits.
    a               Open in vertical split.
    {Visual}a       Open selected files in vertical splits.
    p               Open file in previous window.
    -               Open the parent directory.

==============================================================================
OPTIONS                                                      *dirvish-options*

g:dirvish_hijack_netrw = 1                            *g:dirvish_hijack_netrw*

    0: ":edit /path/to/dir/" and "vim /path/to/dir/" will be handled by
       |netrw| instead of Dirvish.

g:dirvish_relative_paths = 0                        *g:dirvish_relative_paths*

    1: Make paths in the Dirvish buffer relative to |getcwd()|.
       Note: Recommended on Vim 7.3 (because it lacks |conceal|).

The `dirvish` |FileType| event fires after Dirvish mappings and options are
set. You can override mappings and behavior by handling this event. Example:
>
    augroup my_events
      autocmd!
      " Map t to "open in new tab".
      autocmd FileType dirvish nnoremap <buffer> t
          \ :tabnew <C-R>=fnameescape(getline('.'))<CR><CR>
      " Map CTRL-R to "reload" the Dirvish buffer.
      autocmd FileType dirvish nnoremap <buffer> <C-R> :<C-U>Dirvish %<CR>
      " Map gh to hide "hidden" files.
      autocmd FileType dirvish nnoremap <buffer> gh 
          \ :set ma<bar>g@\v/\.[^\/]+/?$@d<cr>:set noma<cr>
    augroup END
<

==============================================================================
FAQ                                                              *dirvish-faq*

How do I control where Dirvish opens splits? ~
Set the Vim options 'splitbelow' and 'splitright'.

How do I "group" (sort) directories/folders at the top? ~
Sort folders at the top: >
    :set ma|sort r /[^\/]$/
<
Sort folders at the bottom: >
    :set ma|sort r /\/$/
<
How do I filter? ~
Use :g to delete lines matching any filter: >
    :set ma|g/foo/d
<
How do I hide "hidden" (dot-prefixed) files? ~
Use :g to delete the lines with dot-prefixed files: >
    :set ma|g@\v/\.[^\/]+/?$@d
<
Why does the "swap file" dialog appear if another Vim is viewing the same ~
directory? ~
To avoid this, |:noswapfile| is required (Vim 7.4.213).
https://github.com/vim/vim/commit/v7-4-213

How can I rename files or perform other commands?~
>
    qqq
    :g/^/let @Q='echo '.shellescape(getline('.')).' '.shellescape(getline('.'))."\n"
    :exe 'e' tempname().'.sh'
    "qp
    j"_dd
    :w
    :!%
<

 vim:tw=78:ts=8:ft=help:norl:
