*dirvish.txt*	directory viewer

==============================================================================
INTRO                                                          *dirvish-intro*

Dirvish is a minimalist directory viewer. It basically dumps a list of paths
into a Vim buffer and provides some mappings to work with those paths. By
working with built-in Vim mechanisms instead of inventing peripheral
imitations, users (and other plugins) can compose and build upon known Vim
concepts.

Example: because each Dirvish buffer-name is a directory path, you can |:cd|
to the directory: >
  :cd %
<or create a new file: >
  :edit %/foo.txt
<or |expand()| the directory path: >
  :let &titlestring = expand('%', 1)
<
Example: because each dirvish buffer is just a list of absolute paths, you can
use normal Vim commands to |y|ank, |:read|, |gf|, etc. All of the built-in
CTRL-W mappings also work as expected.

==============================================================================
API                                                              *dirvish-api*

:Dirvish                                                            *:Dirvish*
    Open the |current-directory|.

:Dirvish {path}
    Open the directory at {path}, or its parent directory if {path} is a file.
    To open the directory of the current file: >
        :Dirvish %

[range]dirvish#open({cmd}, {bg})
    Perform {cmd} ("edit", "vsplit", "split", "tabedit") on the files in
    [range]. {bg} must be 0 (open files in current window) or 1 (open files in
    the "background").

b:dirvish
w:dirvish

==============================================================================
MAPPINGS                                                    *dirvish-mappings*

Dirvish defines these buffer-local mappings and commands.

    g?              Show this help.
    R               Reload the current directory.
    q               Quit Dirvish and return to the original file.
    i
    <CR>            Open file.
    {Visual}I
    {Visual}<CR>    Open selected files.
    o               Open in horizontal split.
    {Visual}O       Open selected files in horizontal splits.
    a               Open in vertical split.
    {Visual}A       Open selected files in vertical splits.
    p               Open file in previous window.
    -               Open the parent directory.

    :[range]Shdo {cmd} {}                                      *dirvish-:Shdo*
                    Generates a shell script where {cmd} is repeated for each
                    of the files in [range], with each filename inserted
                    wherever {} appears in the :Shdo command.
                    EXAMPLE: To rename a list of visual-selected files: >
                        :'<,'>Shdo mv {} {}-copy.txt
<                    Run the script with ":!%" (see |:!|).

==============================================================================
OPTIONS                                                      *dirvish-options*

g:dirvish_hijack_netrw = 1                            *g:dirvish_hijack_netrw*

    0: ":edit /path/to/dir/" and "vim /path/to/dir/" will be handled by
       |netrw| instead of Dirvish.

g:dirvish_relative_paths = 0                        *g:dirvish_relative_paths*

    1: Make paths in the Dirvish buffer relative to |getcwd()|.
       Note: Recommended on Vim 7.3 (because it lacks |conceal|).

The "dirvish" |FileType| event fires after Dirvish is initialized, so all
mappings, options, and content can be overridden by handling this event.
Example: >

    augroup my_dirvish_events
      autocmd!
      " Map t to "open in new tab".
      autocmd FileType dirvish
        \  nnoremap <buffer> t :call dirvish#open('tabedit', 0)<CR>
        \ |xnoremap <buffer> t :call dirvish#open('tabedit', 0)<CR>

      " Enable :Gstatus and friends.
      autocmd FileType dirvish call fugitive#detect(@%)

      " Map CTRL-R to reload the Dirvish buffer.
      autocmd FileType dirvish nnoremap <buffer> <C-R> :<C-U>Dirvish %<CR>

      " Map gh to hide "hidden" files.
      autocmd FileType dirvish nnoremap <buffer> gh 
          \ :g@\v/\.[^\/]+/?$@d<cr>
    augroup END
<

==============================================================================
FAQ                                                              *dirvish-faq*

How do I control where Dirvish opens splits? ~
Set the Vim options 'splitbelow' and 'splitright'.

How do I "group" (sort) directories/folders at the top? ~
Sort folders at the top: >
    :sort r /[^\/]$/
<
Sort folders at the bottom: >
    :sort r /\/$/
<
How do I filter? ~
Use :g to delete lines matching any filter: >
    :g/foo/d
<
How do I hide "hidden" (dot-prefixed) files? ~
Use :g to delete the lines with dot-prefixed files: >
    :g@\v/\.[^\/]+/?$@d
<
Why does the "swap file" dialog appear if another Vim is viewing the same ~
directory? ~
To avoid this, |:noswapfile| is required (Vim 7.4.213).
https://github.com/vim/vim/commit/v7-4-213

How can I rename files or perform other commands?~
Use the |dirvish-:Shdo| command in a Dirvish buffer.
Or the old-school way: >
    qqq
    :g/^/let @Q='echo '.shellescape(getline('.')).' '.shellescape(getline('.'))."\n"
    :exe 'e' tempname().'.sh'
    :put q|w|!%
<
Why does Dirvish report "invalid directory" for a filename that contains ~
unusual characters (e.g. brackets "[]")? ~
Make sure 'isfname' contains the weird characters.

==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
